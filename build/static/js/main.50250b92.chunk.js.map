{"version":3,"sources":["components/Firebase/context.js","components/Firebase/firebase.js","components/Firebase/index.js","components/SignOut/index.js","components/Session/context.js","components/Session/withAuthentication.js","components/Session/withAuthorization.js","constants/routes.js","components/Navigation/index.js","constants/hookstore.js","components/Movie/index.js","components/Search/index.js","components/Genres/index.js","components/MainMovie/index.js","constants/hooks.js","components/MovieDetail/index.js","components/Landing/index.js","components/SignUp/index.js","components/PasswordForget/index.js","components/SignIn/index.js","components/Home/index.js","components/PasswordChange/index.js","components/Account/index.js","components/Admin/index.js","components/App/index.js","serviceWorker.js","index.js"],"names":["FirebaseContext","React","createContext","withFirebase","Component","props","Consumer","firebase","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","Firebase","doCreateUserWithEmailAndPassword","email","password","auth","createUserWithEmailAndPassword","doSignInWithEmailAndPassword","signInWithEmailAndPassword","doSignOut","signOut","doPasswordReset","sendPasswordResetEmail","doPasswordUpdate","currentUser","updatePassword","user","uid","db","ref","users","app","initializeApp","this","database","type","onClick","AuthUserContext","withAuthentication","WithAuthentication","state","authUser","listener","onAuthStateChanged","setState","Provider","value","withAuthorization","condition","WithAuthorization","history","push","compose","withRouter","NavigationAuth","id","to","SignOut","NavigationNonAuth","Navigation","className","store","setters","forEach","setter","useStore","useState","set","includes","bind","Movie","movie","MovieId","movieId","console","log","poster","poster_path","Fragment","data","alt","title","src","Search","searchValue","setSearchValue","isEnabled","length","required","onChange","e","target","name","placeholder","disabled","search","preventDefault","Genres","setData","Genre","useEffect","fetch","then","response","json","setGenreValue","genre","map","key","initialState","loading","movies","errorMessage","reducer","action","payload","error","MainMovie","useReducer","dispatch","jsonResponse","results","index","useFetch","url","setLoading","a","fetchUrl","MovieDetail","movie_id","imagepath","original_title","overview","LandingPage","exact","path","component","INITIAL_STATE","username","passwordOne","passwordTwo","SignUpFormBase","onSubmit","event","catch","isInvalid","message","SignUpLink","SignUpForm","SignUpPage","PasswordForgetFormBase","PasswordForgetLink","PasswordForgetPage","PasswordForgetForm","SignInFormBase","SignInForm","SignInPage","PasswordChangeForm","PasswordChange","AdminPage","on","snapshot","usersObject","val","usersList","Object","keys","off","UserList","HomePage","AccountPage","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.50250b92.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst FirebaseContext = React.createContext(null);\r\n\r\nexport const withFirebase = Component => props => (\r\n  <FirebaseContext.Consumer>\r\n    {firebase => <Component {...props} firebase={firebase} />}\r\n  </FirebaseContext.Consumer>\r\n);\r\nexport default FirebaseContext;\r\n","import app from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/database\";\r\n\r\nconst config = {\r\n  apiKey: \"AIzaSyBJHZRI01LDK-aGm_tvfwHLUKVDP8F6uoo\",\r\n  authDomain: \"tmdb-movie-app.firebaseapp.com\",\r\n  databaseURL: \"https://tmdb-movie-app.firebaseio.com\",\r\n  projectId: \"tmdb-movie-app\",\r\n  storageBucket: \"tmdb-movie-app.appspot.com\",\r\n  messagingSenderId: \"894860019248\",\r\n  appId: \"1:894860019248:web:6bae2e2dce08b006240ff5\",\r\n  measurementId: \"G-995W50NDG2\"\r\n};\r\nclass Firebase {\r\n  constructor() {\r\n    app.initializeApp(config);\r\n\r\n    this.auth = app.auth();\r\n    this.db = app.database();\r\n  }\r\n  // *** Auth API ***\r\n  doCreateUserWithEmailAndPassword = (email, password) =>\r\n    this.auth.createUserWithEmailAndPassword(email, password);\r\n\r\n  doSignInWithEmailAndPassword = (email, password) =>\r\n    this.auth.signInWithEmailAndPassword(email, password);\r\n\r\n  doSignOut = () => this.auth.signOut();\r\n\r\n  doPasswordReset = email => this.auth.sendPasswordResetEmail(email);\r\n  doPasswordUpdate = password => this.auth.currentUser.updatePassword(password);\r\n\r\n  // *** User API ***\r\n  user = uid => this.db.ref(`users/${uid}`);\r\n  users = () => this.db.ref(\"users\");\r\n}\r\nexport default Firebase;\r\n","import FirebaseContext, { withFirebase } from \"./context\";\r\n\r\nimport Firebase from \"./firebase\";\r\nexport default Firebase;\r\nexport { FirebaseContext, withFirebase };\r\n","import React from \"react\";\r\n\r\nimport { withFirebase } from \"../Firebase\";\r\nconst SignOutButton = ({ firebase }) => (\r\n  <button type='button' onClick={firebase.doSignOut}>\r\n    Sign Out\r\n  </button>\r\n);\r\nexport default withFirebase(SignOutButton);\r\n","import React from \"react\";\r\n\r\nconst AuthUserContext = React.createContext(null);\r\n\r\nexport default AuthUserContext;\r\n","import React from \"react\";\r\nimport AuthUserContext from \"./context\";\r\nimport { withFirebase } from \"../Firebase\";\r\n\r\nconst withAuthentication = Component => {\r\n  class WithAuthentication extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n        authUser: null\r\n      };\r\n    }\r\n    componentDidMount() {\r\n      this.listener = this.props.firebase.auth.onAuthStateChanged(authUser => {\r\n        authUser\r\n          ? this.setState({ authUser })\r\n          : this.setState({ authUser: null });\r\n      });\r\n    }\r\n    componentWillUnmount() {\r\n      this.listener();\r\n    }\r\n\r\n    render() {\r\n      return (\r\n        <AuthUserContext.Provider value={this.state.authUser}>\r\n          <Component {...this.props} />\r\n        </AuthUserContext.Provider>\r\n      );\r\n    }\r\n  }\r\n  return withFirebase(WithAuthentication);\r\n};\r\nexport default withAuthentication;\r\n","import React from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { compose } from \"recompose\";\r\n\r\nimport AuthUserContext from \"./context\";\r\nimport { withFirebase } from \"../Firebase\";\r\nimport * as ROUTES from \"../../constants/routes\";\r\n\r\nconst withAuthorization = condition => Component => {\r\n  class WithAuthorization extends React.Component {\r\n    componentDidMount() {\r\n      this.listener = this.props.firebase.auth.onAuthStateChanged(authUser => {\r\n        if (!condition(authUser)) {\r\n          this.props.history.push(ROUTES.SIGN_IN);\r\n        }\r\n      });\r\n    }\r\n    componentWillUnmount() {\r\n      this.listener();\r\n    }\r\n\r\n    render() {\r\n      return (\r\n        <AuthUserContext.Consumer>\r\n          {authUser =>\r\n            condition(authUser) ? <Component {...this.props} /> : null\r\n          }\r\n        </AuthUserContext.Consumer>\r\n      );\r\n    }\r\n  }\r\n  return compose(withRouter, withFirebase)(WithAuthorization);\r\n};\r\nexport default withAuthorization;\r\n","export const LANDING = \"/\";\r\nexport const SIGN_UP = \"/signup\";\r\nexport const SIGN_IN = \"/signin\";\r\nexport const HOME = \"/home\";\r\nexport const ACCOUNT = \"/account\";\r\nexport const ADMIN = \"/admin\";\r\nexport const PASSWORD_FORGET = \"/pw-forget\";\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport * as ROUTES from \"../../constants/routes\";\r\n// import { SignUpLink } from \"../SignUp\";\r\nimport SignOutButton from \"../SignOut\";\r\nimport { AuthUserContext } from \"../Session\";\r\n\r\nconst Navigation = () => (\r\n  <div className='menu-align'>\r\n    <AuthUserContext.Consumer>\r\n      {authUser => (authUser ? <NavigationAuth /> : <NavigationNonAuth />)}\r\n    </AuthUserContext.Consumer>\r\n  </div>\r\n);\r\nconst NavigationAuth = () => (\r\n  <ul id='top-menu'>\r\n    <li>\r\n      <Link to={ROUTES.LANDING}>Movies</Link>\r\n    </li>\r\n    <li>\r\n      <Link to={ROUTES.HOME}>Home</Link>\r\n    </li>\r\n    <li>\r\n      <Link to={ROUTES.ACCOUNT}>Account</Link>\r\n    </li>\r\n    <li>\r\n      <Link to={ROUTES.ADMIN}>Admin</Link>\r\n    </li>\r\n    <li>\r\n      <SignOutButton />\r\n    </li>\r\n  </ul>\r\n);\r\nconst NavigationNonAuth = () => (\r\n  <ul id='top-menu'>\r\n    <li>\r\n      <Link to={ROUTES.LANDING}>Movies</Link>\r\n    </li>\r\n    <li>\r\n      <Link to={ROUTES.SIGN_UP}>Sign Up</Link>\r\n    </li>\r\n    <li>\r\n      <Link to={ROUTES.SIGN_IN}>\r\n        <button>Sign In</button>\r\n      </Link>\r\n    </li>\r\n  </ul>\r\n);\r\nexport default Navigation;\r\n","import { useState } from \"react\";\r\n\r\nexport const store = {\r\n  state: {},\r\n  setState(value) {\r\n    this.state = value;\r\n    this.setters.forEach(setter => setter(this.state));\r\n  },\r\n  setters: []\r\n};\r\n\r\n// Bind the setState function to the store object so\r\n// we don't lose context when calling it elsewhere\r\nstore.setState = store.setState.bind(store);\r\n// console.log(store);\r\n\r\n// this is the custom hook we'll call on components.\r\nexport function useStore() {\r\n  const [state, set] = useState(store.state);\r\n  if (!store.setters.includes(set)) {\r\n    store.setters.push(set);\r\n  }\r\n  //console.log(state);\r\n  return [state, store.setState];\r\n}\r\n","import React from \"react\";\r\nimport { store, useStore } from \"../../constants/hookstore\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst IMG_BASE_URL = \"https://image.tmdb.org/t/p/w500\";\r\n\r\nconst DEFAULT_PLACEHOLDER_IMAGE =\r\n  \"https://m.media-amazon.com/images/M/MV5BMTczNTI2ODUwOF5BMl5BanBnXkFtZTcwMTU0NTIzMw@@._V1_SX300.jpg\";\r\n\r\nstore.state = \"\";\r\n\r\nconst Movie = ({ movie }) => {\r\n  const [MovieId, movieId] = useStore(\"\");\r\n  const [toggleClass, setToggleClass] = useStore(false);\r\n\r\n  console.log(movie.id);\r\n  console.log(\"this is movie id\");\r\n\r\n  const poster =\r\n    movie.poster === \"N/A\"\r\n      ? DEFAULT_PLACEHOLDER_IMAGE\r\n      : IMG_BASE_URL + movie.poster_path;\r\n\r\n  const getMovieId = () => {\r\n    movieId(movie.id);\r\n  };\r\n\r\n  // const setCounter = () => {\r\n  //   setToggleClass((x = x + 1));\r\n  // };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div>\r\n        <Link\r\n          to='/MovieDetail'\r\n          onClick={getMovieId}\r\n          value={movie.id}\r\n          data={MovieId}\r\n        >\r\n          <img\r\n            className='movie'\r\n            alt={`The movie titled: ${movie.title}`}\r\n            src={poster}\r\n          />\r\n        </Link>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Movie;\r\n","import React, { useState } from \"react\";\r\n\r\nconst Search = props => {\r\n  const [searchValue, setSearchValue] = useState(\"\");\r\n\r\n  console.log(searchValue);\r\n\r\n  const handleSearchInputChanges = e => {\r\n    setSearchValue(e.target.value);\r\n  };\r\n\r\n  const resetInputField = () => {\r\n    setSearchValue(\"\");\r\n  };\r\n\r\n  const callSearchFunction = e => {\r\n    props.search(searchValue);\r\n    resetInputField();\r\n    e.preventDefault();\r\n  };\r\n\r\n  const isEnabled = searchValue.length > 0 && searchValue.length > 0;\r\n\r\n  return (\r\n    <form className='search'>\r\n      <input\r\n        required\r\n        value={searchValue}\r\n        onChange={handleSearchInputChanges}\r\n        type='text'\r\n        name='searchTerm'\r\n        placeholder='Search For Movies'\r\n      />\r\n      <button\r\n        disabled={!isEnabled}\r\n        onClick={callSearchFunction}\r\n        type='submit'\r\n        value='SEARCH_VALUE'\r\n        required\r\n      >\r\n        SEARCH\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nconst Genres = props => {\r\n  const [data, setData] = useState([]);\r\n  const [Genre, genreValue] = useState(\"\");\r\n\r\n  //console.log({ Genre });\r\n  //console.log({ genreValue });\r\n\r\n  useEffect(() => {\r\n    fetch(\r\n      `https://api.themoviedb.org/3/genre/movie/list?api_key=dc15dc94ad3132023e29552c1fe96161&language=en-US`\r\n    )\r\n      .then(response => response.json())\r\n      .then(data => setData(data[\"genres\"]));\r\n  }, []);\r\n\r\n  console.log(props);\r\n  console.log(\"this is props\");\r\n\r\n  const setGenreValue = e => {\r\n    // genreValue(e.target.value);\r\n    props.genre(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className='genre-wrap'>\r\n      <ul className=''>\r\n        <h3>Genres</h3>\r\n        {data.map(genre => (\r\n          <li\r\n            className=''\r\n            type='button'\r\n            id='seewho2'\r\n            key={genre.id}\r\n            data={Genre}\r\n            onClick={setGenreValue}\r\n            value={genre.id}\r\n          >\r\n            {genre.name}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\nexport default Genres;\r\n","import React, { useReducer, useEffect } from \"react\";\r\nimport \"../../App.css\";\r\n\r\nimport Movie from \"../Movie\";\r\nimport Search from \"../Search\";\r\nimport Genres from \"../Genres\";\r\n\r\n//export const AppContext = React.createContext();\r\n\r\nconst MOVIE_API_URL =\r\n  \"https://api.themoviedb.org/3/search/movie?api_key=dc15dc94ad3132023e29552c1fe96161&query=Batman\";\r\n\r\nconst initialState = {\r\n  loading: true,\r\n  movies: [],\r\n  errorMessage: null\r\n};\r\n// console.log({ Movie });\r\n// console.log({ Genres });\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"SEARCH_MOVIES_REQUEST\":\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        errorMessage: null\r\n      };\r\n    case \"SEARCH_MOVIES_SUCCESS\":\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        movies: action.payload\r\n      };\r\n    case \"SEARCH_MOVIES_FAILURE\":\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        errorMessage: action.error\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n//`https://api.themoviedb.org/3/movie/${movie.id}?api_key=dc15dc94ad3132023e29552c1fe96161&language=en-US`\r\n\r\nconst MainMovie = () => {\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n\r\n  useEffect(() => {\r\n    fetch(MOVIE_API_URL)\r\n      .then(response => response.json())\r\n      .then(jsonResponse => {\r\n        dispatch({\r\n          type: \"SEARCH_MOVIES_SUCCESS\",\r\n          payload: jsonResponse.results\r\n        });\r\n      });\r\n  }, []);\r\n\r\n  // *************Search\r\n\r\n  const search = searchValue => {\r\n    console.log({ searchValue });\r\n    console.log(\"searchvalue\");\r\n    dispatch({\r\n      type: \"SEARCH_MOVIES_REQUEST\"\r\n    });\r\n\r\n    fetch(\r\n      `https://api.themoviedb.org/3/search/movie?api_key=dc15dc94ad3132023e29552c1fe96161&query=${searchValue}`\r\n    )\r\n      .then(response => response.json())\r\n      .then(jsonResponse => {\r\n        console.log(\"this is search\");\r\n        dispatch({\r\n          type: \"SEARCH_MOVIES_SUCCESS\",\r\n          payload: jsonResponse.results\r\n        });\r\n      });\r\n  };\r\n\r\n  // ************Genres\r\n\r\n  const genre = Genre => {\r\n    console.log({ Genre });\r\n    console.log(\"genre\");\r\n    dispatch({\r\n      type: \"SEARCH_MOVIES_REQUEST\"\r\n    });\r\n\r\n    fetch(\r\n      `https://api.themoviedb.org/3/discover/movie?api_key=dc15dc94ad3132023e29552c1fe96161&language=pt-BR&with_genres=${Genre}`\r\n    )\r\n      .then(response => response.json())\r\n      .then(jsonResponse => {\r\n        console.log(\"yes to genres\");\r\n        dispatch({\r\n          type: \"SEARCH_MOVIES_SUCCESS\",\r\n          payload: jsonResponse.results\r\n        });\r\n      });\r\n  };\r\n\r\n  const { movies, errorMessage, loading } = state;\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className='App'>\r\n        <Search search={search} />\r\n      </div>\r\n      <div className='wrap'>\r\n        <Genres genre={genre} />\r\n        <div className='movie-wrap'>\r\n          <div className='movies'>\r\n            {loading && !errorMessage ? (\r\n              <span>loading... </span>\r\n            ) : errorMessage ? (\r\n              <div className='errorMessage'>{errorMessage}</div>\r\n            ) : (\r\n              movies.map((movie, index) => (\r\n                <div>\r\n                  <Movie key={`${index}-${movie.title}`} movie={movie} />\r\n                </div>\r\n              ))\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default MainMovie;\r\n","import { useState, useEffect } from \"react\";\r\nfunction useFetch(url) {\r\n  const [data, setData] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  async function fetchUrl() {\r\n    const response = await fetch(url);\r\n    const json = await response.json();\r\n    setData(json);\r\n    setLoading(false);\r\n  }\r\n  useEffect(() => {\r\n    fetchUrl();\r\n  }, []);\r\n  return [data, loading];\r\n}\r\nexport { useFetch };\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport * as ROUTES from \"../../constants/routes\";\r\nimport { useStore } from \"../../constants/hookstore\";\r\nimport { useFetch } from \"../../constants/hooks\";\r\n\r\nconst MovieDetail = () => {\r\n  console.log(\"this is movie detail\");\r\n\r\n  const MovieId = useStore();\r\n  //console.log(store);\r\n  console.log(MovieId[0]);\r\n\r\n  const movie_id = MovieId[0];\r\n  console.log(movie_id);\r\n\r\n  const [data] = useFetch(\r\n    `https://api.themoviedb.org/3/movie/${movie_id}?api_key=dc15dc94ad3132023e29552c1fe96161&language=en-US`\r\n  );\r\n\r\n  // console.log(data);\r\n\r\n  const imagepath = `https://image.tmdb.org/t/p/w500/${data.poster_path}`;\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Link to={ROUTES.LANDING}>\r\n        <h1>Movies</h1>\r\n      </Link>\r\n      <div>\r\n        <img alt={data.original_title} src={imagepath} />\r\n        <p>{data.overview}</p>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default MovieDetail;\r\n\r\n// {loading ? (\r\n//     \"Loading...\"\r\n//   ) : (\r\n//     <ul>\r\n//       {data.map(({ imdb_id, original_title, poster_path }) => (\r\n//         <li key={`photo-${imdb_id}`}>\r\n//           <img alt={original_title} src={poster_path} />\r\n//         </li>\r\n//       ))}\r\n//     </ul>\r\n//   )}\r\n","import React from \"react\";\r\n\r\nimport { BrowserRouter, Route } from \"react-router-dom\";\r\nimport MainMovie from \"../MainMovie\";\r\nimport MovieDetail from \"../MovieDetail\";\r\n\r\nconst LandingPage = () => {\r\n  return (\r\n    <BrowserRouter>\r\n      <div className='App'>\r\n        <Route exact path='/' component={MainMovie} />\r\n        <Route path='/:MovieId' component={MovieDetail} />\r\n      </div>\r\n    </BrowserRouter>\r\n  );\r\n};\r\nexport default LandingPage;\r\n","import React, { Component } from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport { compose } from \"recompose\";\r\nimport { withFirebase } from \"../Firebase\";\r\nimport * as ROUTES from \"../../constants/routes\";\r\n\r\nconst SignUpPage = () => (\r\n  <div>\r\n    <h1>SignUp</h1>\r\n    <SignUpForm />\r\n  </div>\r\n);\r\n\r\nconst INITIAL_STATE = {\r\n  username: \"\",\r\n  email: \"\",\r\n  passwordOne: \"\",\r\n  passwordTwo: \"\",\r\n  error: null\r\n};\r\n\r\nclass SignUpFormBase extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = { ...INITIAL_STATE };\r\n  }\r\n  onSubmit = event => {\r\n    const { username, email, passwordOne } = this.state;\r\n    this.props.firebase\r\n      .doCreateUserWithEmailAndPassword(email, passwordOne)\r\n      .then(authUser => {\r\n        // Create a user in your Firebase realtime database\r\n        return this.props.firebase.user(authUser.user.uid).set({\r\n          username,\r\n          email\r\n        });\r\n      })\r\n      .then(authUser => {\r\n        this.setState({ ...INITIAL_STATE });\r\n        this.props.history.push(ROUTES.HOME);\r\n      })\r\n      .catch(error => {\r\n        this.setState({ error });\r\n      });\r\n    event.preventDefault();\r\n  };\r\n  onChange = event => {};\r\n\r\n  onChange = event => {\r\n    this.setState({ [event.target.name]: event.target.value });\r\n  };\r\n\r\n  render() {\r\n    const { username, email, passwordOne, passwordTwo, error } = this.state;\r\n    const isInvalid =\r\n      passwordOne !== passwordTwo ||\r\n      passwordOne === \"\" ||\r\n      email === \"\" ||\r\n      username === \"\";\r\n    return (\r\n      <form onSubmit={this.onSubmit}>\r\n        {\" \"}\r\n        <input\r\n          name='username'\r\n          value={username}\r\n          onChange={this.onChange}\r\n          type='text'\r\n          placeholder='Full Name'\r\n        />\r\n        <input\r\n          name='email'\r\n          value={email}\r\n          onChange={this.onChange}\r\n          type='text'\r\n          placeholder='Email Address'\r\n        />\r\n        <input\r\n          name='passwordOne'\r\n          value={passwordOne}\r\n          onChange={this.onChange}\r\n          type='password'\r\n          placeholder='Password'\r\n        />\r\n        <input\r\n          name='passwordTwo'\r\n          value={passwordTwo}\r\n          onChange={this.onChange}\r\n          type='password'\r\n          placeholder='Confirm Password'\r\n        />\r\n        <button disabled={isInvalid} type='submit'>\r\n          Sign Up\r\n        </button>\r\n        {error && <p>{error.message}</p>}\r\n      </form>\r\n    );\r\n  }\r\n}\r\nconst SignUpLink = () => (\r\n  <p>\r\n    <Link to={ROUTES.SIGN_UP}>Sign Up</Link>\r\n  </p>\r\n);\r\nconst SignUpForm = compose(withRouter, withFirebase)(SignUpFormBase);\r\n\r\nexport default SignUpPage;\r\nexport { SignUpForm, SignUpLink };\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { withFirebase } from \"../Firebase\";\r\nimport * as ROUTES from \"../../constants/routes\";\r\nconst PasswordForgetPage = () => (\r\n  <div>\r\n    <h1>PasswordForget</h1>\r\n    <PasswordForgetForm />\r\n  </div>\r\n);\r\nconst INITIAL_STATE = {\r\n  email: \"\",\r\n  error: null\r\n};\r\nclass PasswordForgetFormBase extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { ...INITIAL_STATE };\r\n  }\r\n  onSubmit = event => {\r\n    const { email } = this.state;\r\n    this.props.firebase\r\n      .doPasswordReset(email)\r\n      .then(() => {\r\n        this.setState({ ...INITIAL_STATE });\r\n      })\r\n      .catch(error => {\r\n        this.setState({ error });\r\n      });\r\n    event.preventDefault();\r\n  };\r\n  onChange = event => {\r\n    this.setState({ [event.target.name]: event.target.value });\r\n  };\r\n  render() {\r\n    const { email, error } = this.state;\r\n    const isInvalid = email === \"\";\r\n    return (\r\n      <form onSubmit={this.onSubmit}>\r\n        <input\r\n          name='email'\r\n          value={this.state.email}\r\n          onChange={this.onChange}\r\n          type='text'\r\n          placeholder='Email Address'\r\n        />\r\n        <button disabled={isInvalid} type='submit'>\r\n          Reset My Password\r\n        </button>\r\n        {error && <p>{error.message}</p>}\r\n      </form>\r\n    );\r\n  }\r\n}\r\nconst PasswordForgetLink = () => (\r\n  <p>\r\n    <Link to={ROUTES.PASSWORD_FORGET}>Forgot Password?</Link>\r\n  </p>\r\n);\r\nexport default PasswordForgetPage;\r\nconst PasswordForgetForm = withFirebase(PasswordForgetFormBase);\r\nexport { PasswordForgetForm, PasswordForgetLink };\r\n","import React, { Component } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { compose } from \"recompose\";\r\nimport { SignUpLink } from \"../SignUp\";\r\nimport { PasswordForgetLink } from \"../PasswordForget\";\r\nimport { withFirebase } from \"../Firebase\";\r\nimport * as ROUTES from \"../../constants/routes\";\r\nconst SignInPage = () => (\r\n  <div>\r\n    <h1>SignIn</h1>\r\n    <SignInForm />\r\n    <PasswordForgetLink />\r\n    <h4>Don't have an account?</h4>\r\n    <SignUpLink />\r\n  </div>\r\n);\r\nconst INITIAL_STATE = {\r\n  email: \"\",\r\n  password: \"\",\r\n  error: null\r\n};\r\nclass SignInFormBase extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { ...INITIAL_STATE };\r\n  }\r\n  onSubmit = event => {\r\n    const { email, password } = this.state;\r\n    this.props.firebase\r\n      .doSignInWithEmailAndPassword(email, password)\r\n      .then(() => {\r\n        this.setState({ ...INITIAL_STATE });\r\n        this.props.history.push(ROUTES.HOME);\r\n      })\r\n      .catch(error => {\r\n        this.setState({ error });\r\n      });\r\n    event.preventDefault();\r\n  };\r\n  onChange = event => {\r\n    this.setState({ [event.target.name]: event.target.value });\r\n  };\r\n  render() {\r\n    const { email, password, error } = this.state;\r\n    const isInvalid = password === \"\" || email === \"\";\r\n    return (\r\n      <form onSubmit={this.onSubmit}>\r\n        <input\r\n          name='email'\r\n          value={email}\r\n          onChange={this.onChange}\r\n          type='text'\r\n          placeholder='Email Address'\r\n        />\r\n        <input\r\n          name='password'\r\n          value={password}\r\n          onChange={this.onChange}\r\n          type='password'\r\n          placeholder='Password'\r\n        />\r\n        <button disabled={isInvalid} type='submit'>\r\n          Sign In\r\n        </button>\r\n        {error && <p>{error.message}</p>}\r\n      </form>\r\n    );\r\n  }\r\n}\r\nconst SignInForm = compose(withRouter, withFirebase)(SignInFormBase);\r\nexport default SignInPage;\r\nexport { SignInForm };\r\n","import React from \"react\";\r\nimport { withAuthorization } from \"../Session\";\r\nconst HomePage = () => (\r\n  <div>\r\n    <h1>Home Page</h1>\r\n    <p>The Home Page is accessible by every signed in user.</p>\r\n  </div>\r\n);\r\nconst condition = authUser => !!authUser;\r\nexport default withAuthorization(condition)(HomePage);\r\n","import React, { Component } from \"react\";\r\nimport { withFirebase } from \"../Firebase\";\r\nconst INITIAL_STATE = {\r\n  passwordOne: \"\",\r\n  passwordTwo: \"\",\r\n  error: null\r\n};\r\nclass PasswordChangeForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { ...INITIAL_STATE };\r\n  }\r\n  onSubmit = event => {\r\n    const { passwordOne } = this.state;\r\n    this.props.firebase\r\n      .doPasswordUpdate(passwordOne)\r\n      .then(() => {\r\n        this.setState({ ...INITIAL_STATE });\r\n      })\r\n      .catch(error => {\r\n        this.setState({ error });\r\n      });\r\n    event.preventDefault();\r\n  };\r\n  onChange = event => {\r\n    this.setState({ [event.target.name]: event.target.value });\r\n  };\r\n  render() {\r\n    const { passwordOne, passwordTwo, error } = this.state;\r\n    const isInvalid = passwordOne !== passwordTwo || passwordOne === \"\";\r\n    return (\r\n      <form onSubmit={this.onSubmit}>\r\n        <input\r\n          name='passwordOne'\r\n          value={passwordOne}\r\n          onChange={this.onChange}\r\n          type='password'\r\n          placeholder='New Password'\r\n        />\r\n        <input\r\n          name='passwordTwo'\r\n          value={passwordTwo}\r\n          onChange={this.onChange}\r\n          type='password'\r\n          placeholder='Confirm New Password'\r\n        />\r\n        <button disabled={isInvalid} type='submit'>\r\n          Reset My Password\r\n        </button>\r\n        {error && <p>{error.message}</p>}\r\n      </form>\r\n    );\r\n  }\r\n}\r\nexport default withFirebase(PasswordChangeForm);\r\n","import React from \"react\";\r\nimport { AuthUserContext, withAuthorization } from \"../Session\";\r\nimport { PasswordForgetForm } from \"../PasswordForget\";\r\nimport PasswordChangeForm from \"../PasswordChange\";\r\nconst AccountPage = () => (\r\n  <AuthUserContext.Consumer>\r\n    {authUser => (\r\n      <div>\r\n        <h1>Account: {authUser.email}</h1>\r\n        <PasswordForgetForm />\r\n        <PasswordChangeForm />\r\n      </div>\r\n    )}\r\n  </AuthUserContext.Consumer>\r\n);\r\nconst condition = authUser => !!authUser;\r\nexport default withAuthorization(condition)(AccountPage);\r\n","import React, { Component } from \"react\";\r\nimport { withFirebase } from \"../Firebase\";\r\n\r\nclass AdminPage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      loading: false,\r\n      users: []\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    this.setState({ loading: true });\r\n    this.props.firebase.users().on(\"value\", snapshot => {\r\n      const usersObject = snapshot.val();\r\n      const usersList = Object.keys(usersObject).map(key => ({\r\n        ...usersObject[key],\r\n        uid: key\r\n      }));\r\n\r\n      this.setState({\r\n        users: usersList,\r\n        loading: false\r\n      });\r\n    });\r\n  }\r\n  componentWillUnmount() {\r\n    this.props.firebase.users().off();\r\n  }\r\n\r\n  render() {\r\n    const { users, loading } = this.state;\r\n    return (\r\n      <div>\r\n        <h1>Admin</h1>\r\n        {loading && <div>Loading ...</div>}\r\n        <UserList users={users} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst UserList = ({ users }) => (\r\n  <ul>\r\n    {users.map(user => (\r\n      <li key={user.uid}>\r\n        <span>\r\n          <strong>ID:</strong> {user.uid}\r\n        </span>\r\n        <span>\r\n          <strong>E-Mail:</strong> {user.email}\r\n        </span>\r\n        <span>\r\n          <strong>Username:</strong> {user.username}\r\n        </span>\r\n      </li>\r\n    ))}\r\n  </ul>\r\n);\r\nexport default withFirebase(AdminPage);\r\n","import React from \"react\";\r\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\r\nimport Navigation from \"../Navigation\";\r\nimport LandingPage from \"../Landing\";\r\nimport SignUpPage from \"../SignUp\";\r\nimport SignInPage from \"../SignIn\";\r\nimport PasswordForgetPage from \"../PasswordForget\";\r\nimport HomePage from \"../Home\";\r\nimport AccountPage from \"../Account\";\r\nimport AdminPage from \"../Admin\";\r\nimport * as ROUTES from \"../../constants/routes\";\r\nimport { withFirebase } from \"../Firebase\";\r\nimport { withAuthentication } from \"../Session\";\r\n\r\nconst App = () => (\r\n  <Router>\r\n    <div className='app-container'>\r\n      <Navigation />\r\n      <hr />\r\n      <Route exact path={ROUTES.LANDING} component={LandingPage} />\r\n      <Route path={ROUTES.SIGN_UP} component={SignUpPage} />\r\n      <Route path={ROUTES.SIGN_IN} component={SignInPage} />\r\n      <Route path={ROUTES.PASSWORD_FORGET} component={PasswordForgetPage} />\r\n      <Route path={ROUTES.HOME} component={HomePage} />\r\n      <Route path={ROUTES.ACCOUNT} component={AccountPage} />\r\n      <Route path={ROUTES.ADMIN} component={AdminPage} />\r\n    </div>\r\n  </Router>\r\n);\r\n\r\nexport default withAuthentication(App);\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport Firebase, { FirebaseContext } from \"./components/Firebase\";\n\nReactDOM.render(\n  <FirebaseContext.Provider value={new Firebase()}>\n    <App />\n  </FirebaseContext.Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}