{"version":3,"sources":["components/Firebase/context.js","components/Firebase/firebase.js","components/Firebase/index.js","components/SignOut/index.js","components/Navigation/index.js","constants/routes.js","constants/hookstore.js","components/Movie/index.js","components/Search/index.js","components/Genres/index.js","components/MainMovie/index.js","constants/hooks.js","components/MovieDetail/index.js","components/Landing/index.js","components/SignUp/index.js","components/SignIn/index.js","components/PasswordForget/index.js","components/Home/index.js","components/Account/index.js","components/Admin/index.js","components/App/index.js","serviceWorker.js","index.js"],"names":["FirebaseContext","React","createContext","withFirebase","Component","props","Consumer","firebase","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","Firebase","doCreateUserWithEmailAndPassword","email","password","auth","createUserWithEmailAndPassword","doSignInWithEmailAndPassword","signInWithEmailAndPassword","doSignOut","signOut","doPasswordReset","sendPasswordResetEmail","doPasswordUpdate","currentUser","updatePassword","app","initializeApp","this","type","onClick","NavigationAuth","id","to","SignOut","NavigationNonAuth","Navigation","authUser","className","store","state","setState","value","setters","forEach","setter","useStore","useState","set","includes","push","bind","Movie","movie","MovieId","movieId","console","log","poster","poster_path","Fragment","data","alt","title","src","Search","searchValue","setSearchValue","isEnabled","length","required","onChange","e","target","name","placeholder","disabled","search","preventDefault","Genres","setData","Genre","useEffect","fetch","then","response","json","setGenreValue","genre","map","key","initialState","loading","movies","errorMessage","reducer","action","payload","error","MainMovie","useReducer","dispatch","jsonResponse","results","index","useFetch","url","setLoading","a","fetchUrl","MovieDetail","movie_id","imagepath","original_title","overview","LandingPage","exact","path","component","INITIAL_STATE","username","passwordOne","passwordTwo","SignUpFormBase","onSubmit","event","history","catch","isInvalid","message","SignUpLink","SignUpForm","compose","withRouter","SignUpPage","SignInFormBase","SignInForm","SignInPage","PasswordForget","HomePage","AccountPage","AdminPage","onAuthStateChanged","PasswordForgetPage","Boolean","window","location","hostname","match","ReactDOM","render","Provider","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.67925b99.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst FirebaseContext = React.createContext(null);\r\n\r\nexport const withFirebase = Component => props => (\r\n  <FirebaseContext.Consumer>\r\n    {firebase => <Component {...props} firebase={firebase} />}\r\n  </FirebaseContext.Consumer>\r\n);\r\nexport default FirebaseContext;\r\n","import app from \"firebase/app\";\r\nimport \"firebase/auth\";\r\n\r\nconst config = {\r\n  apiKey: \"AIzaSyBJHZRI01LDK-aGm_tvfwHLUKVDP8F6uoo\",\r\n  authDomain: \"tmdb-movie-app.firebaseapp.com\",\r\n  databaseURL: \"https://tmdb-movie-app.firebaseio.com\",\r\n  projectId: \"tmdb-movie-app\",\r\n  storageBucket: \"tmdb-movie-app.appspot.com\",\r\n  messagingSenderId: \"894860019248\",\r\n  appId: \"1:894860019248:web:6bae2e2dce08b006240ff5\",\r\n  measurementId: \"G-995W50NDG2\"\r\n};\r\nclass Firebase {\r\n  constructor() {\r\n    app.initializeApp(config);\r\n\r\n    this.auth = app.auth();\r\n  }\r\n  // *** Auth API ***\r\n  doCreateUserWithEmailAndPassword = (email, password) =>\r\n    this.auth.createUserWithEmailAndPassword(email, password);\r\n\r\n  doSignInWithEmailAndPassword = (email, password) =>\r\n    this.auth.signInWithEmailAndPassword(email, password);\r\n\r\n  doSignOut = () => this.auth.signOut();\r\n\r\n  doPasswordReset = email => this.auth.sendPasswordResetEmail(email);\r\n  doPasswordUpdate = password => this.auth.currentUser.updatePassword(password);\r\n}\r\nexport default Firebase;\r\n","import FirebaseContext, { withFirebase } from \"./context\";\r\n\r\nimport Firebase from \"./firebase\";\r\nexport default Firebase;\r\nexport { FirebaseContext, withFirebase };\r\n","import React from \"react\";\r\n\r\nimport { withFirebase } from \"../Firebase\";\r\nconst SignOutButton = ({ firebase }) => (\r\n  <button type='button' onClick={firebase.doSignOut}>\r\n    Sign Out\r\n  </button>\r\n);\r\nexport default withFirebase(SignOutButton);\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport * as ROUTES from \"../../constants/routes\";\r\n// import { SignUpLink } from \"../SignUp\";\r\nimport SignOutButton from \"../SignOut\";\r\n\r\nconst Navigation = ({ authUser }) => (\r\n  <div className='menu-align'>\r\n    {authUser ? <NavigationAuth /> : <NavigationNonAuth />}\r\n  </div>\r\n);\r\nconst NavigationAuth = () => (\r\n  <ul id='top-menu'>\r\n    <li>\r\n      <Link to={ROUTES.LANDING}>Movies</Link>\r\n    </li>\r\n    <li>\r\n      <Link to={ROUTES.HOME}>Home</Link>\r\n    </li>\r\n    <li>\r\n      <Link to={ROUTES.ACCOUNT}>Account</Link>\r\n    </li>\r\n    <li>\r\n      <SignOutButton />\r\n    </li>\r\n  </ul>\r\n);\r\nconst NavigationNonAuth = () => (\r\n  <ul id='top-menu'>\r\n    <li>\r\n      <Link to={ROUTES.LANDING}>Movies</Link>\r\n    </li>\r\n    <li>\r\n      <Link to={ROUTES.SIGN_UP}>Sign Up</Link>\r\n    </li>\r\n    <li>\r\n      <Link to={ROUTES.SIGN_IN}>\r\n        <button>Sign In</button>\r\n      </Link>\r\n    </li>\r\n  </ul>\r\n);\r\nexport default Navigation;\r\n","export const LANDING = \"/\";\r\nexport const SIGN_UP = \"/signup\";\r\nexport const SIGN_IN = \"/signin\";\r\nexport const HOME = \"/home\";\r\nexport const ACCOUNT = \"/account\";\r\nexport const ADMIN = \"/admin\";\r\nexport const PASSWORD_FORGET = \"/pw-forget\";\r\n","import { useState } from \"react\";\r\n\r\nexport const store = {\r\n  state: {},\r\n  setState(value) {\r\n    this.state = value;\r\n    this.setters.forEach(setter => setter(this.state));\r\n  },\r\n  setters: []\r\n};\r\n\r\n// Bind the setState function to the store object so\r\n// we don't lose context when calling it elsewhere\r\nstore.setState = store.setState.bind(store);\r\n// console.log(store);\r\n\r\n// this is the custom hook we'll call on components.\r\nexport function useStore() {\r\n  const [state, set] = useState(store.state);\r\n  if (!store.setters.includes(set)) {\r\n    store.setters.push(set);\r\n  }\r\n  //console.log(state);\r\n  return [state, store.setState];\r\n}\r\n","import React from \"react\";\r\nimport { store, useStore } from \"../../constants/hookstore\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst IMG_BASE_URL = \"https://image.tmdb.org/t/p/w500\";\r\n\r\nconst DEFAULT_PLACEHOLDER_IMAGE =\r\n  \"https://m.media-amazon.com/images/M/MV5BMTczNTI2ODUwOF5BMl5BanBnXkFtZTcwMTU0NTIzMw@@._V1_SX300.jpg\";\r\n\r\nstore.state = \"\";\r\n\r\nconst Movie = ({ movie }) => {\r\n  const [MovieId, movieId] = useStore(\"\");\r\n  const [toggleClass, setToggleClass] = useStore(false);\r\n\r\n  console.log(movie.id);\r\n  console.log(\"this is movie id\");\r\n\r\n  const poster =\r\n    movie.poster === \"N/A\"\r\n      ? DEFAULT_PLACEHOLDER_IMAGE\r\n      : IMG_BASE_URL + movie.poster_path;\r\n\r\n  const getMovieId = () => {\r\n    movieId(movie.id);\r\n  };\r\n\r\n  // const setCounter = () => {\r\n  //   setToggleClass((x = x + 1));\r\n  // };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div>\r\n        <Link\r\n          to='/MovieDetail'\r\n          onClick={getMovieId}\r\n          value={movie.id}\r\n          data={MovieId}\r\n        >\r\n          <img\r\n            className='movie'\r\n            alt={`The movie titled: ${movie.title}`}\r\n            src={poster}\r\n          />\r\n        </Link>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Movie;\r\n","import React, { useState } from \"react\";\r\n\r\nconst Search = props => {\r\n  const [searchValue, setSearchValue] = useState(\"\");\r\n\r\n  console.log(searchValue);\r\n\r\n  const handleSearchInputChanges = e => {\r\n    setSearchValue(e.target.value);\r\n  };\r\n\r\n  const resetInputField = () => {\r\n    setSearchValue(\"\");\r\n  };\r\n\r\n  const callSearchFunction = e => {\r\n    props.search(searchValue);\r\n    resetInputField();\r\n    e.preventDefault();\r\n  };\r\n\r\n  const isEnabled = searchValue.length > 0 && searchValue.length > 0;\r\n\r\n  return (\r\n    <form className='search'>\r\n      <input\r\n        required\r\n        value={searchValue}\r\n        onChange={handleSearchInputChanges}\r\n        type='text'\r\n        name='searchTerm'\r\n        placeholder='Search For Movies'\r\n      />\r\n      <button\r\n        disabled={!isEnabled}\r\n        onClick={callSearchFunction}\r\n        type='submit'\r\n        value='SEARCH_VALUE'\r\n        required\r\n      >\r\n        SEARCH\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nconst Genres = props => {\r\n  const [data, setData] = useState([]);\r\n  const [Genre, genreValue] = useState(\"\");\r\n\r\n  //console.log({ Genre });\r\n  //console.log({ genreValue });\r\n\r\n  useEffect(() => {\r\n    fetch(\r\n      `https://api.themoviedb.org/3/genre/movie/list?api_key=dc15dc94ad3132023e29552c1fe96161&language=en-US`\r\n    )\r\n      .then(response => response.json())\r\n      .then(data => setData(data[\"genres\"]));\r\n  }, []);\r\n\r\n  console.log(props);\r\n  console.log(\"this is props\");\r\n\r\n  const setGenreValue = e => {\r\n    // genreValue(e.target.value);\r\n    props.genre(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className='genre-wrap'>\r\n      <ul className=''>\r\n        <h3>Genres</h3>\r\n        {data.map(genre => (\r\n          <li\r\n            className=''\r\n            type='button'\r\n            id='seewho2'\r\n            key={genre.id}\r\n            data={Genre}\r\n            onClick={setGenreValue}\r\n            value={genre.id}\r\n          >\r\n            {genre.name}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\nexport default Genres;\r\n","import React, { useReducer, useEffect } from \"react\";\r\nimport \"../../App.css\";\r\n\r\nimport Movie from \"../Movie\";\r\nimport Search from \"../Search\";\r\nimport Genres from \"../Genres\";\r\n\r\n//export const AppContext = React.createContext();\r\n\r\nconst MOVIE_API_URL =\r\n  \"https://api.themoviedb.org/3/search/movie?api_key=dc15dc94ad3132023e29552c1fe96161&query=Batman\";\r\n\r\nconst initialState = {\r\n  loading: true,\r\n  movies: [],\r\n  errorMessage: null\r\n};\r\n// console.log({ Movie });\r\n// console.log({ Genres });\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"SEARCH_MOVIES_REQUEST\":\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        errorMessage: null\r\n      };\r\n    case \"SEARCH_MOVIES_SUCCESS\":\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        movies: action.payload\r\n      };\r\n    case \"SEARCH_MOVIES_FAILURE\":\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        errorMessage: action.error\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n//`https://api.themoviedb.org/3/movie/${movie.id}?api_key=dc15dc94ad3132023e29552c1fe96161&language=en-US`\r\n\r\nconst MainMovie = () => {\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n\r\n  useEffect(() => {\r\n    fetch(MOVIE_API_URL)\r\n      .then(response => response.json())\r\n      .then(jsonResponse => {\r\n        dispatch({\r\n          type: \"SEARCH_MOVIES_SUCCESS\",\r\n          payload: jsonResponse.results\r\n        });\r\n      });\r\n  }, []);\r\n\r\n  // *************Search\r\n\r\n  const search = searchValue => {\r\n    console.log({ searchValue });\r\n    console.log(\"searchvalue\");\r\n    dispatch({\r\n      type: \"SEARCH_MOVIES_REQUEST\"\r\n    });\r\n\r\n    fetch(\r\n      `https://api.themoviedb.org/3/search/movie?api_key=dc15dc94ad3132023e29552c1fe96161&query=${searchValue}`\r\n    )\r\n      .then(response => response.json())\r\n      .then(jsonResponse => {\r\n        console.log(\"this is search\");\r\n        dispatch({\r\n          type: \"SEARCH_MOVIES_SUCCESS\",\r\n          payload: jsonResponse.results\r\n        });\r\n      });\r\n  };\r\n\r\n  // ************Genres\r\n\r\n  const genre = Genre => {\r\n    console.log({ Genre });\r\n    console.log(\"genre\");\r\n    dispatch({\r\n      type: \"SEARCH_MOVIES_REQUEST\"\r\n    });\r\n\r\n    fetch(\r\n      `https://api.themoviedb.org/3/discover/movie?api_key=dc15dc94ad3132023e29552c1fe96161&language=pt-BR&with_genres=${Genre}`\r\n    )\r\n      .then(response => response.json())\r\n      .then(jsonResponse => {\r\n        console.log(\"yes to genres\");\r\n        dispatch({\r\n          type: \"SEARCH_MOVIES_SUCCESS\",\r\n          payload: jsonResponse.results\r\n        });\r\n      });\r\n  };\r\n\r\n  const { movies, errorMessage, loading } = state;\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className='App'>\r\n        <Search search={search} />\r\n      </div>\r\n      <div className='wrap'>\r\n        <Genres genre={genre} />\r\n        <div className='movie-wrap'>\r\n          <div className='movies'>\r\n            {loading && !errorMessage ? (\r\n              <span>loading... </span>\r\n            ) : errorMessage ? (\r\n              <div className='errorMessage'>{errorMessage}</div>\r\n            ) : (\r\n              movies.map((movie, index) => (\r\n                <div>\r\n                  <Movie key={`${index}-${movie.title}`} movie={movie} />\r\n                </div>\r\n              ))\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default MainMovie;\r\n","import { useState, useEffect } from \"react\";\r\nfunction useFetch(url) {\r\n  const [data, setData] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  async function fetchUrl() {\r\n    const response = await fetch(url);\r\n    const json = await response.json();\r\n    setData(json);\r\n    setLoading(false);\r\n  }\r\n  useEffect(() => {\r\n    fetchUrl();\r\n  }, []);\r\n  return [data, loading];\r\n}\r\nexport { useFetch };\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport * as ROUTES from \"../../constants/routes\";\r\nimport { useStore } from \"../../constants/hookstore\";\r\nimport { useFetch } from \"../../constants/hooks\";\r\n\r\nconst MovieDetail = () => {\r\n  console.log(\"this is movie detail\");\r\n\r\n  const MovieId = useStore();\r\n  //console.log(store);\r\n  console.log(MovieId[0]);\r\n\r\n  const movie_id = MovieId[0];\r\n  console.log(movie_id);\r\n\r\n  const [data] = useFetch(\r\n    `https://api.themoviedb.org/3/movie/${movie_id}?api_key=dc15dc94ad3132023e29552c1fe96161&language=en-US`\r\n  );\r\n\r\n  // console.log(data);\r\n\r\n  const imagepath = `https://image.tmdb.org/t/p/w500/${data.poster_path}`;\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Link to={ROUTES.LANDING}>\r\n        <h1>Movies</h1>\r\n      </Link>\r\n      <div>\r\n        <img alt={data.original_title} src={imagepath} />\r\n        <p>{data.overview}</p>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default MovieDetail;\r\n\r\n// {loading ? (\r\n//     \"Loading...\"\r\n//   ) : (\r\n//     <ul>\r\n//       {data.map(({ imdb_id, original_title, poster_path }) => (\r\n//         <li key={`photo-${imdb_id}`}>\r\n//           <img alt={original_title} src={poster_path} />\r\n//         </li>\r\n//       ))}\r\n//     </ul>\r\n//   )}\r\n","import React from \"react\";\r\n\r\nimport { BrowserRouter, Route } from \"react-router-dom\";\r\nimport MainMovie from \"../MainMovie\";\r\nimport MovieDetail from \"../MovieDetail\";\r\n\r\nconst LandingPage = () => {\r\n  return (\r\n    <BrowserRouter>\r\n      <div className='App'>\r\n        <Route exact path='/' component={MainMovie} />\r\n        <Route path='/:MovieId' component={MovieDetail} />\r\n      </div>\r\n    </BrowserRouter>\r\n  );\r\n};\r\nexport default LandingPage;\r\n","import React, { Component } from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport { compose } from \"recompose\";\r\nimport { withFirebase } from \"../Firebase\";\r\nimport * as ROUTES from \"../../constants/routes\";\r\n\r\nconst SignUpPage = () => (\r\n  <div>\r\n    <h1>SignUp</h1>\r\n    <SignUpForm />\r\n  </div>\r\n);\r\n\r\nconst INITIAL_STATE = {\r\n  username: \"\",\r\n  email: \"\",\r\n  passwordOne: \"\",\r\n  passwordTwo: \"\",\r\n  error: null\r\n};\r\n\r\nclass SignUpFormBase extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = { ...INITIAL_STATE };\r\n  }\r\n  onSubmit = event => {\r\n    const { username, email, passwordOne } = this.state;\r\n    this.props.firebase\r\n      .doCreateUserWithEmailAndPassword(email, passwordOne)\r\n      .then(authUser => {\r\n        this.setState({ ...INITIAL_STATE });\r\n        this.props.history.push(ROUTES.HOME);\r\n      })\r\n      .catch(error => {\r\n        this.setState({ error });\r\n      });\r\n    event.preventDefault();\r\n  };\r\n  onChange = event => {};\r\n\r\n  onChange = event => {\r\n    this.setState({ [event.target.name]: event.target.value });\r\n  };\r\n\r\n  render() {\r\n    const { username, email, passwordOne, passwordTwo, error } = this.state;\r\n    const isInvalid =\r\n      passwordOne !== passwordTwo ||\r\n      passwordOne === \"\" ||\r\n      email === \"\" ||\r\n      username === \"\";\r\n    return (\r\n      <form onSubmit={this.onSubmit}>\r\n        {\" \"}\r\n        <input\r\n          name='username'\r\n          value={username}\r\n          onChange={this.onChange}\r\n          type='text'\r\n          placeholder='Full Name'\r\n        />\r\n        <input\r\n          name='email'\r\n          value={email}\r\n          onChange={this.onChange}\r\n          type='text'\r\n          placeholder='Email Address'\r\n        />\r\n        <input\r\n          name='passwordOne'\r\n          value={passwordOne}\r\n          onChange={this.onChange}\r\n          type='password'\r\n          placeholder='Password'\r\n        />\r\n        <input\r\n          name='passwordTwo'\r\n          value={passwordTwo}\r\n          onChange={this.onChange}\r\n          type='password'\r\n          placeholder='Confirm Password'\r\n        />\r\n        <button disabled={isInvalid} type='submit'>\r\n          Sign Up\r\n        </button>\r\n        {error && <p>{error.message}</p>}\r\n      </form>\r\n    );\r\n  }\r\n}\r\nconst SignUpLink = () => (\r\n  <p>\r\n    <Link to={ROUTES.SIGN_UP}>Sign Up</Link>\r\n  </p>\r\n);\r\nconst SignUpForm = compose(withRouter, withFirebase)(SignUpFormBase);\r\n\r\nexport default SignUpPage;\r\nexport { SignUpForm, SignUpLink };\r\n","import React, { Component } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { compose } from \"recompose\";\r\nimport { SignUpLink } from \"../SignUp\";\r\nimport { withFirebase } from \"../Firebase\";\r\nimport * as ROUTES from \"../../constants/routes\";\r\nconst SignInPage = () => (\r\n  <div>\r\n    <h1>SignIn</h1>\r\n    <SignInForm />\r\n    <h4>Don't have an account?</h4>\r\n    <SignUpLink />\r\n  </div>\r\n);\r\nconst INITIAL_STATE = {\r\n  email: \"\",\r\n  password: \"\",\r\n  error: null\r\n};\r\nclass SignInFormBase extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { ...INITIAL_STATE };\r\n  }\r\n  onSubmit = event => {\r\n    const { email, password } = this.state;\r\n    this.props.firebase\r\n      .doSignInWithEmailAndPassword(email, password)\r\n      .then(() => {\r\n        this.setState({ ...INITIAL_STATE });\r\n        this.props.history.push(ROUTES.HOME);\r\n      })\r\n      .catch(error => {\r\n        this.setState({ error });\r\n      });\r\n    event.preventDefault();\r\n  };\r\n  onChange = event => {\r\n    this.setState({ [event.target.name]: event.target.value });\r\n  };\r\n  render() {\r\n    const { email, password, error } = this.state;\r\n    const isInvalid = password === \"\" || email === \"\";\r\n    return (\r\n      <form onSubmit={this.onSubmit}>\r\n        <input\r\n          name='email'\r\n          value={email}\r\n          onChange={this.onChange}\r\n          type='text'\r\n          placeholder='Email Address'\r\n        />\r\n        <input\r\n          name='password'\r\n          value={password}\r\n          onChange={this.onChange}\r\n          type='password'\r\n          placeholder='Password'\r\n        />\r\n        <button disabled={isInvalid} type='submit'>\r\n          Sign In\r\n        </button>\r\n        {error && <p>{error.message}</p>}\r\n      </form>\r\n    );\r\n  }\r\n}\r\nconst SignInForm = compose(withRouter, withFirebase)(SignInFormBase);\r\nexport default SignInPage;\r\nexport { SignInForm };\r\n","import React from \"react\";\r\n\r\nconst PasswordForget = () => <p>hello</p>;\r\nexport default PasswordForget;\r\n","import React from \"react\";\r\n\r\nconst HomePage = () => <p>Home Page</p>;\r\nexport default HomePage;\r\n","import React from \"react\";\r\n\r\nconst AccountPage = () => <p>hello</p>;\r\nexport default AccountPage;\r\n","import React from \"react\";\r\n\r\nconst AdminPage = () => <p>hello</p>;\r\nexport default AdminPage;\r\n","import React, { Component } from \"react\";\r\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\r\nimport Navigation from \"../Navigation\";\r\nimport LandingPage from \"../Landing\";\r\nimport SignUpPage from \"../SignUp\";\r\nimport SignInPage from \"../SignIn\";\r\nimport PasswordForgetPage from \"../PasswordForget\";\r\nimport HomePage from \"../Home\";\r\nimport AccountPage from \"../Account\";\r\nimport AdminPage from \"../Admin\";\r\nimport * as ROUTES from \"../../constants/routes\";\r\nimport { withFirebase } from \"../Firebase\";\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      authUser: null\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    this.props.firebase.auth.onAuthStateChanged(authUser => {\r\n      authUser\r\n        ? this.setState({ authUser })\r\n        : this.setState({ authUser: null });\r\n    });\r\n  }\r\n  render() {\r\n    return (\r\n      <Router>\r\n        <div className='app-container'>\r\n          <Navigation authUser={this.state.authUser} />\r\n          <hr />\r\n          <Route exact path={ROUTES.LANDING} component={LandingPage} />\r\n          <Route path={ROUTES.SIGN_UP} component={SignUpPage} />\r\n          <Route path={ROUTES.SIGN_IN} component={SignInPage} />\r\n          <Route path={ROUTES.PASSWORD_FORGET} component={PasswordForgetPage} />\r\n          <Route path={ROUTES.HOME} component={HomePage} />\r\n          <Route path={ROUTES.ACCOUNT} component={AccountPage} />\r\n          <Route path={ROUTES.ADMIN} component={AdminPage} />\r\n        </div>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\nexport default withFirebase(App);\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport Firebase, { FirebaseContext } from \"./components/Firebase\";\n\nReactDOM.render(\n  <FirebaseContext.Provider value={new Firebase()}>\n    <App />\n  </FirebaseContext.Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}